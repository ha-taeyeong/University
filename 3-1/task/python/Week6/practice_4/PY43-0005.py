# 문장속에 등장하는 문자들을 알파벳순으로 정렬된 문자열을 만드시오.
#
# 조건
# Trinket3.x
# while 반복문 이용
# 입력
# 입력된 문자열의 스페이스 ,Tab 은 제거한다.
# 출력
# 입출력 예 참고
# 입출력 예
# 입출력 결과와 똑같아야 합니다. (공백, 대소문자, 형식을 정확하게 맞춰주세요)
# 입력 안내 메시지는 생략해주세요
str1 = input()  # 문자열 입력 받기
str1 = str1.replace(" ", "").replace("\t", "")  # 문자열에서 공백과 탭 제거
chars = list(str1)  # 문자열을 문자 하나씩 분리하여 리스트로 변환

# 버블 정렬 알고리즘을 사용해 리스트를 오름차순 정렬 (while 반복문 사용)
i = 0
while i < len(chars):  # 리스트 전체를 순회하며
    j = 0
    while j < len(chars) - 1:  # 인접한 문자들끼리 비교
        if chars[j] > chars[j + 1]:  # 앞 문자가 뒤 문자보다 크면 (알파벳 순서상 뒤)
            chars[j], chars[j + 1] = chars[j + 1], chars[j]  # 위치 교환
        j += 1  # 다음 인덱스로 이동
    i += 1  # 외부 루프 반복 (여러 번 순회 필요)

# 정렬된 문자 리스트를 하나의 문자열로 합쳐서 출력
print("".join(chars))
